{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "describes": "Base schema of catalog entries",
  "type": "object",
  "definitions": {
    "tagsSchema": {
      "type": "array",
      "minItems": 0,
      "uniqueItems":true,
      "describes": "Any strings which annotate this resource. It intends to provide discovery hints.",
      "items": {
        "type": "string"
      }
    },
    "itemTypeSchema": {
       "type": "string",
       "enum": ["data-model", "provider", "resource-server", "resource-item", "tags-item", "access-object", "base-schema", "catalogue-item"],
       "describes": "Type of an item. Schema or an information document."
    },
    "itemStatusSchema": {
       "type": "string",
       "enum": ["active", "deprecated"],
       "describes": "Status of an item. In production version of catalogue, for purposes of provenance, one can choose to not delete an item but set its status to 'deprecated'. All the older versions of an updated item may be persisted by setting their status as 'deprecated'. Only the current item containing latest updates should have status set to 'active'."
    },
    "refToAnotherItemSchema": {
       "type": "object",
       "describes": "Attributes describing the link to another item",
       "properties": {
          "describes": {
             "type": "string",
             "describes": "Describes the contents of item to which link is being provided"
          },
          "refItemId": {
             "type": "string",
             "describes": "Contains 'id' of the item being referred to. 'id' is of type UUID"
          },
          "refItemURL": {
             "type": "string",
             "format": "uri",
             "describes": "Contains URL link for the item being referred to."
          }
       }
    },
    "providerItemSchema": {
       "type": "object",
       "allOf": [
       {"$ref": "https://raw.githubusercontent.com/rbccps-iisc/iudx-schemas/test/base_schemas/v0.0.1/iudx_base_def.json#/definitions/refToAnotherItemSchema"}
       ],
       "properties": {
          "refItemName": {
             "type": "string",
             "describes": "Name of the provider."
          },
          "refItemType": {
             "type": "string",
             "enum": ["provider"]
          }
       },
       "required": ["refItemName"]
    },
    "resourceServerItemSchema": {
       "type": "object",
       "properties": {
       "$ref": "#/definitions/refToAnotherItemSchema",
          "refItemName": {
             "type": "string",
             "describes": "Name of the resource server."
          },
          "refItemType": {
             "type": "string",
             "enum": ["resource-server"]
          }
       },
       "required": ["refItemId", "refItemName"]
    },
    "sharingTypeSchema" : {
      "type": "string",
      "enum" : ["public", "private", "protected", "confidential"]
    },
    "entityIdSchema": {
      "type": "object",
      "properties": {
        "entityId": {
          "type": "string",
          "describes": "ID of the Entity. Should be unique within this IUDX exchange."
        },
        "entityIdentityType": {
          "type": "string",
          "describes": "Format of Identification token for the entity. For example: X509, OpenIDConnect etc."
        },
        "entityIdentityProviderURL": {
           "type": "string",
           "format": "uri",
           "describes": "Describes the link to the identity provide for this entity" 
        },
        "entityContactEmail": {
           "type": "string",
           "format": "email",
           "describes": "Email contact address for this entity" 
        },
        "entityURL": {
           "type": "string",
           "format": "uri",
           "describes": "Web page for this entity" 
        },
        "entityContactPhone": {
           "type": "string",
           "describes": "Contact Phone number for this entity" 
        }
      },
      "required": [ "entityId", "entityIdentityType", "entityIdentityProviderURL" ]
    },
    "resourceDataSchema": {
      "type": "object",
      "properties": {
        "type": {
          "type": [ "string", "array" ]
        },
        "properties": {
          "type": "object",
          "patternProperties": {
            "[a-zA-Z0-9]+$": {
              "type": "object"
            }
          }
        },
        "units": {
           "type": "string",
           "describes": "units for the measured quantity if applicable"
        },
        "description": {
          "type": "string"
        }
      },
      "required": [
          "type",
          "description"
      ]
    }
  }
}
